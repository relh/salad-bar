package cmsc436.GroupProject;

import java.util.ArrayList;
import java.util.List;

import android.speech.RecognizerIntent;
import android.support.v7.app.ActionBarActivity;
import android.content.pm.ResolveInfo;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.speech.RecognizerIntent;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.MenuItem.OnMenuItemClickListener;
import android.widget.Toast;

public class MainActivity extends ActionBarActivity {
	private ArrayList<SaladTopping> protiens = new ArrayList<SaladTopping>();
	private ArrayList<SaladTopping> cheeses = new ArrayList<SaladTopping>();
	private ArrayList<SaladTopping> letuce = new ArrayList<SaladTopping>();
	private ArrayList<SaladTopping> toppings = new ArrayList<SaladTopping>();
	private ArrayList<SaladTopping> dressing = new ArrayList<SaladTopping>();
	
	private static final int MENU_VOICE = Menu.FIRST;
	private static final int VOICE_REQUEST_CODE = 1;
	
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }

    @Override
    public boolean onPrepareOptionsMenu(Menu menu) {
        menu.clear();
        if(checkVoiceRecognition()){
        	MenuItem item = menu.add(0, MENU_VOICE, Menu.NONE, "Voice");
            item.setIcon(R.drawable.ic_action_microphone);
            item.setOnMenuItemClickListener(new OnMenuItemClickListener() {
                @Override
                public boolean onMenuItemClick(MenuItem item) {
            	    Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
            	    intent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, getClass().getPackage().getName());
            	    intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
            	    intent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, 1);
            	    startActivityForResult(intent, VOICE_REQUEST_CODE);
                    return true;
                }
            });
            item.setShowAsAction(MenuItem.SHOW_AS_ACTION_ALWAYS);
        }
        
        return super.onPrepareOptionsMenu(menu);
    }
    
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == VOICE_REQUEST_CODE){
        	String sent = "";
        	ArrayList<String> sentence = data.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);
        	for(int i =0; i < sentence.size(); i++){
        		String word = sentence.get(i);
        		sent += " " + word;
        	}
        	Toast.makeText(this, sent, Toast.LENGTH_SHORT).show();
        }
    }
    		
    public Boolean checkVoiceRecognition() {
	    PackageManager pm = getPackageManager();
	    List<ResolveInfo> activities = pm.queryIntentActivities(new Intent(
	        RecognizerIntent.ACTION_RECOGNIZE_SPEECH), 0);
	    if (activities.size() == 0) {
	       Toast.makeText(this, "Voice recognizer not present",
	       Toast.LENGTH_SHORT).show();
	       return false;
        }
	    return true;
    }
}
